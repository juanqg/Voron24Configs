[gcode_macro MAINTENANCE]
description: move the toolhead to a convenient position for working on it
gcode:
    PARKCENTER 

[gcode_macro LIGHTS_ON]
description: move the toolhead to a convenient position for working on it
gcode:
  SET_PIN PIN=light VALUE=1.00
  SET_LED LED="btt_mini12864" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1

[gcode_macro LIGHTS_OFF]
description: move the toolhead to a convenient position for working on it
gcode:
  SET_PIN PIN=light VALUE=0.00
  SET_LED LED="btt_mini12864" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1



[gcode_macro PURGE_BUCKET]
# These parameters define your filament purging. The retract variable is used to retract right after purging to prevent unnecessary
# oozing. Some filament are particularly oozy and may continue to ooze out of the nozzle for a second or two after retracting. The
# ooze dwell variable makes allowance for this. Update as necessary. If you decided to not enable purge, you can ignore this section.
variable_purge_len:            10	         ; Amount of filament, in mm, to purge.
variable_purge_spd:           150	         ; Speed, in mm/min, of the purge.
variable_purge_temp_min:      240	         ; Minimum nozzle temperature to permit a purge. Otherwise, purge will not occur.
variable_purge_ret:             2            ; Retract length, in mm, after purging to prevent slight oozing. Adjust as necessary.
variable_ooze_dwell:            2            ; Dwell/wait time, in seconds, after purging and retracting.
variable_bed_temp:              0            ; Store current bed temp
variable_toolhead_temp:         0            ; Store current hotend temp
#
gcode:
    #SAVE_GCODE_STATE NAME=PURGE
    ##### set defaults #####
    {% set x = params.X|default(55) %}       #edit to your park position
    {% set y = params.Y|default(249) %}      #edit to your park position
    {% set z = params.Z|default(15)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    {% set brush_z = params.brush|default(10)|float %} #edit to your park position
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
      {% set z_safe = lift_z %}
    {% else %}
      {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####

    G91
    G1 Z{z_safe}
    G90
    G1 X{x} Y{y} F6000
    G0 Z{brush_z}            ; Move near the brush
    save_target_temp
    {% if printer[printer.toolhead.extruder].temperature < purge_temp_min %}
      STATUS_HEATING
      M117 Heating hotend...
      M109 S{purge_temp_min}
    {% endif %}  
    M83                      ; relative mode
    G1 E{purge_len} F{purge_spd}
    G1 E-{purge_ret} F{purge_spd * 5}
    G4 P{ooze_dwell * 1000}
    G92 E0   ; reset extruder 
    M400
    M104 S0
    G90
    {% for wipes in range(1, 3) %}
      G0 X44 Y249 F750
      G0 X10 Y247 F750
    {% endfor %}
    G1 X{x} Y{y}
    G1 Z{z_safe}
    restore_target_temp
    #RESTORE_GCODE_STATE NAME=PURGE
    UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10

[gcode_macro BUCKET]
gcode:
    ##### set defaults #####
    {% set x = params.X|default(55) %}       #edit to your park position
    {% set y = params.Y|default(249) %}      #edit to your park position
    {% set z = params.Z|default(15)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    {% set bucket_z = params.bucket|default(15)|float %} #edit to your park position
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
      {% set z_safe = lift_z %}
    {% else %}
      {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    G91
    G1 Z{z_safe} F6000
    G90
    G1 X{x} Y{y} F6000
    G0 Z{bucket_z}            ; Move near the brush

[gcode_macro CLEAN_NOZZLE]
gcode:
    #SAVE_GCODE_STATE NAME=CLEAN
    ##### set defaults #####
    {% set x = params.X|default(40) %}       #edit to your park position
    {% set y = params.Y|default(250) %}      #edit to your park position
    {% set z = params.Z|default(15)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    {% set brush_z = params.brush|default(10)|float %} #edit to your park position
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
      {% set z_safe = lift_z %}
    {% else %}
      {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    G91
    G1 Z{z_safe} F6000
    G90
    G1 X{x} Y{y} F6000
    G0 Z{brush_z}            ; Move near the brush
    {% for wipes in range(1, 10) %}
      G0 X44 Y249 F9000
      G0 X10 Y246 F9000
    {% endfor %}
    G0 Z25 F6000
    G0 X55 Y249 F9000       ; Raise and return
    #RESTORE_GCODE_STATE NAME=CLEAN


[gcode_macro HOME_IF_NEEDED]
gcode:
    {% set verbose = params.VERBOSE|default(False) %}

    {% if not (('xy' in printer.toolhead.homed_axes) or ('z' in printer.toolhead.homed_axes)) %}
        {% if verbose %}
            { action_respond_info("Homing!") }
        {% endif %}
        G28
    {% endif %}

[gcode_macro LCDRGB]
gcode:
    {% set r = params.R|default(1)|float %}
    {% set g = params.G|default(1)|float %}
    {% set b = params.B|default(1)|float %}

    SET_LED LED=btt_mini12864 RED={r} GREEN={g} BLUE={b} INDEX=1 TRANSMIT=0
    SET_LED LED=btt_mini12864 RED={r} GREEN={g} BLUE={b} INDEX=2 TRANSMIT=0
    SET_LED LED=btt_mini12864 RED={r} GREEN={g} BLUE={b} INDEX=3


[gcode_macro RESETRGB]
gcode:
    SET_LED LED=btt_mini12864 RED=1 GREEN=0.45 BLUE=0.4 INDEX=1 TRANSMIT=0
    SET_LED LED=btt_mini12864 RED=0.25 GREEN=0.2 BLUE=0.15 INDEX=2 TRANSMIT=0
    SET_LED LED=btt_mini12864 RED=0.25 GREEN=0.2 BLUE=0.15 INDEX=3

[delayed_gcode SETDISPLAYNEOPIXEL]
initial_duration: 1
gcode:
    RESETRGB

#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#    RESETRGB


[gcode_macro BEEP]
gcode:
    # Parameters
    {% set i = params.I|default(1)|int %}           ; Iterations (number of times to beep).
    {% set dur = params.DUR|default(100)|int %}     ; Duration/wait of each beep in ms. Default 100ms.
    {% set freq = params.FREQ|default(2000)|int %}  ; Frequency in Hz. Default 2kHz.

    {% for iteration in range(i|int) %}
        SET_PIN PIN=beeper VALUE=0.8 CYCLE_TIME={ 1.0/freq if freq > 0 else 1 }
        G4 P{dur}
        SET_PIN PIN=beeper VALUE=0
        G4 P{dur}
    {% endfor %}

[delayed_gcode DISABLEFILAMENTSENSOR]   
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=Filament ENABLE=0


# Park at center of build volume
[gcode_macro PARKCENTER]
gcode:
    CG28                              ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKCENTER
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F6000    
    RESTORE_GCODE_STATE NAME=PARKCENTER

# Park front center
[gcode_macro PARKFRONT]
gcode:
    CG28                              ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z/2} F6000        
    RESTORE_GCODE_STATE NAME=PARKFRONT

# Park front center, but low down.
[gcode_macro PARKFRONTLOW]
gcode:
    CG28                             ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                              ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z20 F6000                                     
    RESTORE_GCODE_STATE NAME=PARKFRONT

# Park top rear left
[gcode_macro PARKREAR]
gcode:
    CG28                             ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKREAR
    G90                              ; absolute positioning
    G0 X{printer.toolhead.axis_minimum.x+10} Y{printer.toolhead.axis_maximum.y-10} Z{printer.toolhead.axis_maximum.z-50} F6000     
    RESTORE_GCODE_STATE NAME=PARKREAR

# Park 15mm above center of bed
[gcode_macro PARKBED]
gcode:
    CG28                               ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKBED
    G90                                ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z15 F6000                                     
    RESTORE_GCODE_STATE NAME=PARKBED    
    
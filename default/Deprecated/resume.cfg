
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro old_RESUME]
#rename_existing: BASE_RESUME
gcode:
    ##### set defaults #####
    {% set x = params.X|default(55) %}             #edit to your park position
    {% set y = params.Y|default(250) %}            #edit to your park position
    {% set z = params.Z|default(25)|float %}       #edit to your park position
    ##### read E from pause macro #####
    {% set e = printer["gcode_macro PAUSE"].extrude|float %}
    {% set additional_e = printer["gcode_macro filament_variables"].filament_extruded|float %}
    ##### end of definitions #####
    {% set brush_z = params.Z|default(7) %}        #edit to your brush top
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
      {% set z_safe = lift_z %}
    {% else %}
      {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=RESUME
    G90
    G1 X{x} Y{y} F6000
    G1 Z{z} F3000
    #save_target_temp
    {% set purge_temp_min = printer["gcode_macro PURGE_BUCKET"].purge_temp_min|float %}
    {% if printer[printer.toolhead.extruder].temperature < purge_temp_min %}
      STATUS_HEATING
      M117 Heating hotend...
      #M109 S{purge_temp_min}
    {% endif %} 
    G91
    G1 E{e+additional_e} F2100
    M400                       ; wait for buffer to clear
    G90
    G1 Z{brush_z} F3000
    {% for wipes in range(2) %}
      G0 X40 Y250 F750
      G0 X0 Y247 F750
    {% endfor %}
    G0 Z{z_safe}
    G0 X1 Y180 F6000
    M400
    restore_target_temp
    RESTORE_GCODE_STATE NAME=RESUME 
    {% set resume_filament = printer["gcode_macro filament_variables"].filament_status %}
    SET_GCODE_VARIABLE MACRO=filament_variables VARIABLE=filament_extruded VALUE=0.0
    {% if resume_filament != 0 %}
      M117 Resume after filament runout...
      {% set target_x = printer["gcode_macro FILAMENT_RUNOUT"].current_x|float %}
      {% set target_y = printer["gcode_macro FILAMENT_RUNOUT"].current_y|float %}
      {% set target_z = printer["gcode_macro FILAMENT_RUNOUT"].safe_z|float %}
      SET_GCODE_VARIABLE MACRO=filament_variables VARIABLE=filament_status VALUE=0
      G0 X{target_x} Y{target_y} Z{target_z} F6000
      RESTORE_GCODE_STATE NAME=FILAMENT_RUNOUT
      #RESTORE_GCODE_STATE NAME=FILAMENT_RUNOUT MOVE=1
    {% else %}
      M117 Resume after pause...
      {% set target_x = printer["gcode_macro PAUSE"].current_x|float %}
      {% set target_y = printer["gcode_macro PAUSE"].current_y|float %}
      {% set target_z = printer["gcode_macro PAUSE"].safe_z|float %}
      G0 X{target_x} Y{target_y} Z{target_z} F6000
      RESTORE_GCODE_STATE NAME=PAUSE_state
      #RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    {% endif %} 
    UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
    STATUS_PRINTING
    BASE_RESUME    

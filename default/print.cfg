
######################################################################
# MACROS
######################################################################

#[temperature_sensor raspberry_pi]
#sensor_type: temperature_host
#min_temp: 10
#max_temp: 100

#[temperature_sensor mcu_temp]
#sensor_type: temperature_mcu
#min_temp: 0
#max_temp: 100

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    # Parameters
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.EXTRUDER|int %}

    #SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
    
    M117 Warmup
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={hotendtemp}
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bedtemp}
    
    BED_MESH_CLEAR
    #SET_GCODE_OFFSET Z=0.0 MOVE=1
    
    G28
    M140 S{bedtemp}            ; set bed temp and wait for it reach temp 
    QUAD_GANTRY_LEVEL
    BUCKET 
    M109 S{hotendtemp}
    M117 Clean Nozzle
    M83
    G1 E-2 F600
    CLEAN_NOZZLE
    M117 Homing
    G28
    M117 Mesh Calibrate
    #SET_GCODE_OFFSET Z=-0.700 MOVE=1
    BED_MESH_CALIBRATE

    M117 Purge before print
    ADAPTIVE_PURGE      
    # Adjust the G-Code Z offset if needed
    # SET_GCODE_OFFSET Z_ADJUST={params.Z_ADJUST|default(0.0)|float} MOVE=1
    
    #SET_FILAMENT_SENSOR SENSOR=Filament ENABLE=1
    #M117 Filament Sensor Enabled
    M117 Printing...

[gcode_macro PREPARE]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    BED_MESH_CLEAR
    #SET_GCODE_OFFSET Z=0.0 MOVE=1
    #SET_FILAMENT_SENSOR SENSOR=Filament ENABLE=0
    #M117 Filament Sensor Disabled
    G28
    M117 Gantry Level
    QUAD_GANTRY_LEVEL
    G28
    M117 Warmup
    #M104 S140                  ; start preheating hotend
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=180
    BUCKET
    #M109 S245
    {% if printer.heater_bed.temperature < 60 %}
      M117 Waiting for Bed Temp...
      M190 S60                 ; set bed temp and wait for it reach temp
    {% endif %}
    M117 Waiting for hotend temp...
    M109 S180
    M117 Clean Nozzle
    CLEAN_NOZZLE
    M117 Bed is warm, homing again...
    G28
    M117 Final Gantry Level
    QUAD_GANTRY_LEVEL
    M117 Set long timeout
    SET_IDLE_TIMEOUT TIMEOUT=43200 
    SUCCESS_SOUND

[gcode_macro KLICKY_Z_OFFSET]
gcode:
    #SAVE_GCODE_STATE NAME=offset
    {% if not (('xy' in printer.toolhead.homed_axes) or ('z' in printer.toolhead.homed_axes)) %}
      {action_respond_info("Printer not ready")}
      M117 Printer not ready
      BAD_NEWS_SOUND
    {% else %}
      BED_MESH_CLEAR
      G28 Z
      
      G0 X125 Y125 F9000          ; go to center for calibration
      #Z_ENDSTOP_CALIBRATE 
      #CALIBRATE_Z
      PROBE_CALIBRATE
      #M400
      #SET_GCODE_OFFSET Z_ADJUST=0.7855 MOVE=1
      #position_endstop = 2.258
      #RESTORE_GCODE_STATE NAME=offset
    {% endif %}


[gcode_macro PAPER_Z_OFFSET]
gcode:
    #SAVE_GCODE_STATE NAME=offset
    {% if not (('xy' in printer.toolhead.homed_axes) or ('z' in printer.toolhead.homed_axes)) %}
      {action_respond_info("Printer not ready")}
      M117 Printer not ready
      BAD_NEWS_SOUND
    {% else %}
      BED_MESH_CLEAR
      G28 Z0
      G0 X125 Y125 F9000          ; go to center for calibration
      Z_ENDSTOP_CALIBRATE 
      #CALIBRATE_Z
      #position_endstop = 2.258
      #RESTORE_GCODE_STATE NAME=offset
    {% endif %}

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    STATUS_BUSY
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 40) %}
        {% set z_safe = 40.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    #SET_FILAMENT_SENSOR SENSOR=Filament ENABLE=0
    
    G0 Z{z_safe} F3600                    ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000         ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    
    #G90                                   ; absolute positioning
    #G0 X200 Y230 F3600                    ; park nozzle near bucket
    #M84 X Y E                            ; disable steppers
    M117 Print Complete.
    
    #G0 Z{z_safe} F3600                    ; move nozzle up
    CLEAN_NOZZLE
    M107                                  ; turn off fan
    BUCKET
    SUCCESS_SOUND
    
    {% if printer.configfile.config["bed_mesh"] %}
      BED_MESH_CLEAR
    {% endif %}

    {% if printer['fan_generic exhaust_fan'] %}
      SET_FAN_SPEED FAN=exhaust_fan SPEED=1.0
      UPDATE_DELAYED_GCODE ID=_DISABLE_EXHAUST DURATION=300
    {% else %}
        M118 No exhaust fan configured
    {% endif %}

    {% if printer['fan_generic cooling_fan'] %}
      SET_FAN_SPEED FAN=cooling_fan SPEED=1.0
      UPDATE_DELAYED_GCODE ID=_DISABLE_COOLING DURATION=300
    {% else %}
      M118 No cooling fan configured
    {% endif %}
    
    UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=60
    STATUS_READY
    UPDATE_DELAYED_GCODE ID=PRINTER_OFF DURATION=900
    

[gcode_macro RELEASE_STEPPERS]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    TURN_OFF_HEATERS
    M107                                  ; turn off fan
    M84                                   ; disable steppers
    SET_PIN PIN=light VALUE=0.00

[gcode_macro STATUS_READY]
gcode:
    M117 READY
    
[gcode_macro STATUS_BUSY]
gcode:
    M117 BUSY

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount
    
    {% if printer['pause_resume'].is_paused|int == 0 %}     
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
                                
        #SET_FILAMENT_SENSOR SENSOR=Filament ENABLE=0                                         ; disable filament sensor       
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume                
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        #M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}


[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}
    
    {% if printer['pause_resume'].is_paused|int == 1 %}
        #SET_FILAMENT_SENSOR SENSOR=Filament ENABLE=1                                 ; enable filament sensor
        RESETRGB                                                                     ; reset LCD color
        #SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}                      
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}                             
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

   
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAN_NOZZLE
    #TURN_OFF_HEATERS
    CLEAR_PAUSE    
    BASE_CANCEL_PRINT
    #SDCARD_RESET_FILE
    BED_MESH_CLEAR
    UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
    STATUS_READY
    
